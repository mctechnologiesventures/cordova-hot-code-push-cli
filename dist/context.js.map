{"version":3,"sources":["../src/context.js"],"names":["path","require","fs","_","IGNORED_FILES_CONFIG_PATH","join","process","cwd","DEFAULT_WWW_FOLDER","DEFAULT_CLI_CONFIG","DEFAULT_IGNORE_LIST","module","exports","context","argv","Context","defaultConfig","sourceDirectory","getSourceDirectory","manifestFilePath","projectsConfigFilePath","ignoredFiles","getIgnoredFiles","consoleArgs","length","projectIgnore","readIgnoredFilesProjectConfig","ignoredList","union","remove","item","indexOf","trim","pathToConfig","fileContent","readFileSync","e","split"],"mappings":"AAAA,CAAC,YAAY;AACX,MAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,MAAIC,KAAKD,QAAQ,UAAR,CAAT;AACA,MAAIE,IAAIF,QAAQ,QAAR,CAAR;AACA,MAAIG,4BAA4BJ,KAAKK,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyB,aAAzB,CAAhC;AACA,MAAIC,qBAAqBR,KAAKK,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyB,KAAzB,CAAzB;AACA,MAAIE,qBAAqBT,KAAKK,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyB,kBAAzB,CAAzB;AACA,MAAIG,sBAAsB,CACxB,WADwB,EAExB,gBAFwB,EAGxB,iBAHwB,EAIxB,WAJwB,EAKxB,eALwB,EAMxB,QANwB,EAOxB,YAPwB,EAQxB,UARwB,EASxB,MATwB,EAUxB,cAVwB,CAA1B;;AAaAC,SAAOC,OAAP,GAAiB;AACfC,aAASA;AADM,GAAjB;;AAIA,WAASA,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,WAAO,IAAIC,OAAJ,CAAYD,IAAZ,CAAP;AACD;;AAED,MAAIC,UAAU,UAAUD,IAAV,EAAgB;AAC5B,SAAKA,IAAL,GAAYA,OAAOA,IAAP,GAAc,EAA1B;AACA,SAAKE,aAAL,GAAqBP,kBAArB;AACA,SAAKQ,eAAL,GAAuBC,mBAAmBJ,IAAnB,CAAvB;AACA,SAAKK,gBAAL,GAAwBnB,KAAKK,IAAL,CAAU,KAAKY,eAAf,EAAgC,eAAhC,CAAxB;AACA,SAAKG,sBAAL,GAA8BpB,KAAKK,IAAL,CAAU,KAAKY,eAAf,EAAgC,WAAhC,CAA9B;AACA,SAAKI,YAAL,GAAoBC,iBAApB;AACD,GAPD;;AASA,WAASJ,kBAAT,CAA4BJ,IAA5B,EAAkC;AAChC,QAAIS,cAAcT,KAAKX,CAAvB;AACA,QAAI,CAACoB,WAAD,IAAgBA,YAAYC,MAAZ,KAAuB,CAA3C,EAA8C;AAC5C,aAAOhB,kBAAP;AACD;;AAED,WAAOR,KAAKK,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyBgB,YAAY,CAAZ,CAAzB,CAAP;AACD;;AAED,WAASD,eAAT,GAA2B;AACzB,QAAIG,gBAAgBC,8BAClBtB,yBADkB,CAApB;AAGA,QAAIuB,cAAcxB,EAAEyB,KAAF,CAAQlB,mBAAR,EAA6Be,aAA7B,CAAlB;;AAEA;AACAtB,MAAE0B,MAAF,CAASF,WAAT,EAAsB,UAAUG,IAAV,EAAgB;AACpC,aAAOA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2B5B,EAAE6B,IAAF,CAAOF,IAAP,EAAaN,MAAb,KAAwB,CAA1D;AACD,KAFD;;AAIA,WAAOG,WAAP;AACD;;AAED,WAASD,6BAAT,CAAuCO,YAAvC,EAAqD;AACnD,QAAIC,WAAJ;AACA,QAAI;AACFA,oBAAchC,GAAGiC,YAAH,CAAgBF,YAAhB,EAA8B,MAA9B,CAAd;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU;AACV,aAAO,EAAP;AACD;;AAED,WAAOjC,EAAE6B,IAAF,CAAOE,WAAP,EAAoBG,KAApB,CAA0B,IAA1B,CAAP;AACD;AACF,CAtED","file":"context.js","sourcesContent":["(function () {\n  var path = require(\"path\");\n  var fs = require(\"fs-extra\");\n  var _ = require(\"lodash\");\n  var IGNORED_FILES_CONFIG_PATH = path.join(process.cwd(), \".chcpignore\");\n  var DEFAULT_WWW_FOLDER = path.join(process.cwd(), \"www\");\n  var DEFAULT_CLI_CONFIG = path.join(process.cwd(), \"cordova-hcp.json\");\n  var DEFAULT_IGNORE_LIST = [\n    \".DS_Store\",\n    \"node_modules/*\",\n    \"node_modules\\\\*\",\n    \"chcp.json\",\n    \"chcp.manifest\",\n    \".chcp*\",\n    \".gitignore\",\n    \".gitkeep\",\n    \".git\",\n    \"package.json\",\n  ];\n\n  module.exports = {\n    context: context,\n  };\n\n  function context(argv) {\n    return new Context(argv);\n  }\n\n  var Context = function (argv) {\n    this.argv = argv ? argv : {};\n    this.defaultConfig = DEFAULT_CLI_CONFIG;\n    this.sourceDirectory = getSourceDirectory(argv);\n    this.manifestFilePath = path.join(this.sourceDirectory, \"chcp.manifest\");\n    this.projectsConfigFilePath = path.join(this.sourceDirectory, \"chcp.json\");\n    this.ignoredFiles = getIgnoredFiles();\n  };\n\n  function getSourceDirectory(argv) {\n    var consoleArgs = argv._;\n    if (!consoleArgs || consoleArgs.length !== 2) {\n      return DEFAULT_WWW_FOLDER;\n    }\n\n    return path.join(process.cwd(), consoleArgs[1]);\n  }\n\n  function getIgnoredFiles() {\n    var projectIgnore = readIgnoredFilesProjectConfig(\n      IGNORED_FILES_CONFIG_PATH\n    );\n    var ignoredList = _.union(DEFAULT_IGNORE_LIST, projectIgnore);\n\n    // remove comments and empty items\n    _.remove(ignoredList, function (item) {\n      return item.indexOf(\"#\") === 0 || _.trim(item).length === 0;\n    });\n\n    return ignoredList;\n  }\n\n  function readIgnoredFilesProjectConfig(pathToConfig) {\n    var fileContent;\n    try {\n      fileContent = fs.readFileSync(pathToConfig, \"utf8\");\n    } catch (e) {\n      return [];\n    }\n\n    return _.trim(fileContent).split(/\\n/);\n  }\n})();\n"]}