{"version":3,"sources":["../src/init.js"],"names":["es6promise","path","prompt","_","getInput","writeFile","polyfill","configFile","join","process","cwd","name","description","pattern","message","required","iosIdentifier","androidIdentifier","update","default","schema","properties","ios_identifier","android_identifier","urlSchema","content_url","execute","context","override","argv","delimiter","start","result","then","getUrl","url","assign","content","done","err","console","log"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,SAApC;;AAEAL,WAAWM,QAAX;;AAEA,MAAMC,aAAaN,KAAKO,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyB,kBAAzB,CAAnB;;AAEA,MAAMC,OAAO;AACXC,eAAa,+BADF;AAEXC,WAAS,oBAFE;AAGXC,WAAS,qDAHE;AAIXC,YAAU;AAJC,CAAb;;AAOA,MAAMC,gBAAgB;AACpBJ,eAAa,oBADO;AAEpBC,WAAS;AAFW,CAAtB;;AAKA,MAAMI,oBAAoB;AACxBL,eAAa,wBADW;AAExBC,WAAS;AAFe,CAA1B;;AAKA,MAAMK,SAAS;AACbN,eAAa,0BADA;AAEbC,WAAS,oBAFI;AAGbE,YAAU,IAHG;AAIbD,WAAS,yCAJI;AAKbK,WAAS;AALI,CAAf;;AAQA,MAAMC,SAAS;AACbC,cAAY;AACVV,QADU;AAEVW,oBAAgBN,aAFN;AAGVO,wBAAoBN,iBAHV;AAIVC;AAJU;AADC,CAAf;;AASA,MAAMM,YAAY;AAChBH,cAAY;AACVI,iBAAa;AACXb,mBACE,6EAFS;AAGXE,eAAS,iBAHE;AAIXC,gBAAU;AAJC;AADH;AADI,CAAlB;;AAWA,OAAO,SAASW,OAAT,CAAiBC,OAAjB,EAA0B;AAC/BzB,SAAO0B,QAAP,GAAkBD,QAAQE,IAA1B;AACA3B,SAAOY,OAAP,GAAiB,gBAAjB;AACAZ,SAAO4B,SAAP,GAAmB,IAAnB;AACA5B,SAAO6B,KAAP;;AAEA,MAAIC,MAAJ;;AAEA5B,WAASF,MAAT,EAAiBkB,MAAjB,EACGa,IADH,CACQC,MADR,EAEGD,IAFH,CAESE,GAAD,IAAShC,EAAEiC,MAAF,CAASJ,MAAT,EAAiBG,GAAjB,CAFjB,EAGGF,IAHH,CAGSI,OAAD,IAAahC,UAAUE,UAAV,EAAsB8B,OAAtB,CAHrB,EAIGJ,IAJH,CAIQK,IAJR;AAKD;;AAED,SAASJ,MAAT,GAAkB;AAChB,SAAO9B,SAASF,MAAT,EAAiBsB,SAAjB,CAAP;AACD;;AAED,SAASc,IAAT,CAAcC,GAAd,EAAmB;AACjB,MAAIA,GAAJ,EAAS;AACP,WAAOC,QAAQC,GAAR,CAAYF,GAAZ,CAAP;AACD;AACDC,UAAQC,GAAR,CAAY,wDAAZ;AACAD,UAAQC,GAAR,CACE,gFADF;AAGAD,UAAQC,GAAR,CACE,sFADF;AAGD","file":"init.js","sourcesContent":["import es6promise from \"es6-promise\";\nimport path from \"path\";\nimport prompt from \"prompt\";\nimport _ from \"lodash\";\nimport { getInput, writeFile } from \"./utils\";\n\nes6promise.polyfill();\n\nconst configFile = path.join(process.cwd(), \"cordova-hcp.json\");\n\nconst name = {\n  description: \"Enter project name (required)\",\n  pattern: /^[a-zA-Z\\-\\s0-9]+$/,\n  message: \"Name must be only letters, numbers, space or dashes\",\n  required: true,\n};\n\nconst iosIdentifier = {\n  description: \"IOS app identifier\",\n  pattern: /^[a-zA-Z\\-0-9\\.]+$/,\n};\n\nconst androidIdentifier = {\n  description: \"Android app identifier\",\n  pattern: /^[a-zA-Z\\-0-9\\.]+$/,\n};\n\nconst update = {\n  description: \"Update method (required)\",\n  pattern: /(start|resume|now)/,\n  required: true,\n  message: \"Needs to be one of start, resume or now\",\n  default: \"resume\",\n};\n\nconst schema = {\n  properties: {\n    name,\n    ios_identifier: iosIdentifier,\n    android_identifier: androidIdentifier,\n    update,\n  },\n};\n\nconst urlSchema = {\n  properties: {\n    content_url: {\n      description:\n        \"Enter full URL to directory where cordova-hcp build result will be uploaded\",\n      message: \"Must supply URL\",\n      required: true,\n    },\n  },\n};\n\nexport function execute(context) {\n  prompt.override = context.argv;\n  prompt.message = \"Please provide\";\n  prompt.delimiter = \": \";\n  prompt.start();\n\n  let result;\n\n  getInput(prompt, schema)\n    .then(getUrl)\n    .then((url) => _.assign(result, url))\n    .then((content) => writeFile(configFile, content))\n    .then(done);\n}\n\nfunction getUrl() {\n  return getInput(prompt, urlSchema);\n}\n\nfunction done(err) {\n  if (err) {\n    return console.log(err);\n  }\n  console.log(\"Project initialized and cordova-hcp.json file created.\");\n  console.log(\n    \"If you wish to exclude files from being published, specify them in .chcpignore\"\n  );\n  console.log(\n    'Before you can push updates you need to run \"cordova-hcp login\" in project directory'\n  );\n}\n"]}