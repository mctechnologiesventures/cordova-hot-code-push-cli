{"version":3,"sources":["../src/build.js"],"names":["path","require","prompt","fs","async","crypto","Q","_","createHash","recursive","hidefile","chcpContext","module","exports","execute","context","executeDfd","defer","config","prepareConfig","ignore","ignoredFiles","sourceDirectory","err","files","hashQueue","prepareFilesHashQueue","parallelLimit","result","sort","a","b","file","localeCompare","json","JSON","stringify","manifestFile","manifestFilePath","writeFile","console","log","argv","localdev","update","projectsConfigFilePath","release","resolve","promise","queue","i","isHiddenSync","push","hashFile","bind","readFileSync","defaultConfig","parse","process","env","VERSION","calculateTimestamp","e","autogenerated","content_url","filename","callback","hash","stream","createReadStream","on","data","digest","relative","replace","RegExp","currentdate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds"],"mappings":"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","file":"build.js","sourcesContent":["(function () {\n  var path = require(\"path\"),\n    prompt = require(\"prompt\"),\n    fs = require(\"fs-extra\"),\n    async = require(\"async\"),\n    crypto = require(\"crypto\"),\n    Q = require(\"q\"),\n    _ = require(\"lodash\"),\n    createHash = require(\"crypto\").createHash,\n    recursive = require(\"recursive-readdir\"),\n    hidefile = require(\"hidefile\"),\n    chcpContext;\n\n  module.exports = {\n    execute: execute,\n  };\n\n  function execute(context) {\n    chcpContext = context;\n\n    var executeDfd = Q.defer(),\n      config = prepareConfig(context),\n      ignore = context.ignoredFiles;\n\n    recursive(chcpContext.sourceDirectory, ignore, function (err, files) {\n      var hashQueue = prepareFilesHashQueue(files);\n\n      async.parallelLimit(hashQueue, 10, function (err, result) {\n        result.sort((a, b) => {\n          return a.file.localeCompare(b.file);\n        });\n        var json = JSON.stringify(result, null, 2);\n        var manifestFile = chcpContext.manifestFilePath;\n\n        fs.writeFile(manifestFile, json, function (err) {\n          if (err) {\n            return console.log(err);\n          }\n\n          if (context.argv && context.argv.localdev) {\n            config.update = \"now\";\n          }\n          var json = JSON.stringify(config, null, 2);\n          fs.writeFile(\n            chcpContext.projectsConfigFilePath,\n            json,\n            function (err) {\n              if (err) {\n                return console.log(err);\n              }\n              console.log(\n                \"Build \" +\n                  config.release +\n                  \" created in \" +\n                  chcpContext.sourceDirectory\n              );\n              executeDfd.resolve(config);\n            }\n          );\n        });\n      });\n    });\n\n    return executeDfd.promise;\n  }\n\n  function prepareFilesHashQueue(files) {\n    var queue = [];\n    for (var i in files) {\n      var file = files[i];\n      if (!hidefile.isHiddenSync(file)) {\n        queue.push(hashFile.bind(null, file));\n      }\n    }\n\n    return queue;\n  }\n\n  function prepareConfig(context) {\n    var config = {};\n\n    try {\n      config = fs.readFileSync(context.defaultConfig, \"utf8\");\n      config = JSON.parse(config);\n      config.release = process.env.VERSION || calculateTimestamp();\n    } catch (e) {\n      config = {\n        autogenerated: true,\n        release: calculateTimestamp(),\n      };\n    }\n\n    if (context.argv && context.argv.content_url) {\n      config.content_url = context.argv.content_url;\n    }\n\n    console.log(\"Config\", config);\n    return config;\n  }\n\n  function hashFile(filename, callback) {\n    var hash = crypto.createHash(\"md5\"),\n      stream = fs.createReadStream(filename);\n\n    //stream.pipe(writeStream);\n    //console.log('Hashing: ', filename);\n    stream.on(\"data\", function (data) {\n      hash.update(data, \"utf8\");\n    });\n\n    stream.on(\"end\", function () {\n      var result = hash.digest(\"hex\"),\n        file = path\n          .relative(chcpContext.sourceDirectory, filename)\n          .replace(new RegExp(\"\\\\\\\\\", \"g\"), \"/\");\n\n      callback(null, {\n        file: file,\n        hash: result,\n      });\n    });\n  }\n\n  function calculateTimestamp() {\n    var currentdate = new Date();\n    return (\n      currentdate.getFullYear() +\n      \".\" +\n      (currentdate.getMonth() + 1 < 10\n        ? \"0\" + (currentdate.getMonth() + 1)\n        : currentdate.getMonth() + 1) +\n      \".\" +\n      (currentdate.getDate() < 10\n        ? \"0\" + currentdate.getDate()\n        : currentdate.getDate()) +\n      \"-\" +\n      (currentdate.getHours() < 10\n        ? \"0\" + currentdate.getHours()\n        : currentdate.getHours()) +\n      \".\" +\n      (currentdate.getMinutes() < 10\n        ? \"0\" + currentdate.getMinutes()\n        : currentdate.getMinutes()) +\n      \".\" +\n      (currentdate.getSeconds() < 10\n        ? \"0\" + currentdate.getSeconds()\n        : currentdate.getSeconds())\n    );\n  }\n})();\n"]}